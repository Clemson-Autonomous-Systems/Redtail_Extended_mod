<?xml version="1.0" ?>
<launch>
    <!-- 
    caffe_ros .launch file for ZED camera which the zed-ros-wrapper instead of gscam.
    ZED resolution must be set to VGA in the /home/ws/src/zed-ros-wrapper/zed_wrapper/params/common.yaml file 
    -->

    <!-- Trails DNN settings-->
    <arg name="prototxt_path" default="/home/nvidia/redtail/models/pretrained/TrailNet_SResNet-18.prototxt"/>
    <arg name="model_path"    default="/home/nvidia/redtail/models/pretrained/TrailNet_SResNet-18.caffemodel" />
    <arg name="input_layer"  default="data" />
    <arg name="output_layer" default="out" />
    <arg name="data_type"    default="fp16" />

    <arg name="frame_id"   default="/camera_link" />

    <!-- YOLO settings -->
    <arg name="object_prototxt_path" default="/home/nvidia/redtail/models/pretrained/yolo-relu.prototxt" />
    <arg name="object_model_path"    default="/home/nvidia/redtail/models/pretrained/yolo-relu.caffemodel" />
    <arg name="object_output_layer"  default="fc25" />
    <arg name="object_data_type"     default="fp16" />
    <arg name="object_rate_hz"       default="1" />
    <arg name="obj_det_threshold"    default="0.2" />

    <!-- TESTING - MARVOS settings -->
    <arg name="fcu_url" default="/dev/ttyTHS2:921600" />
    <arg name="gcs_url" default="udp://@10.42.0.2" />
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="log_output" default="screen" />
    <arg name="fcu_protocol" default="v1.0" />
    <arg name="respawn_mavros" default="false" />
    
    <!-- Start the RTSP server -->
    <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>

    <node pkg="nodelet" type="nodelet" name="Image2RTSPNodelet" args="load image2rtsp/Image2RTSPNodelet standalone_nodelet" output="screen">
      <rosparam command="load" file="$(find ros_rtsp)/config/stream_setup.yaml" />
    </node>

    <!-- Start ZED ROS node -->
    <include file="$(find zed_wrapper)/launch/zed2.launch"/>

    <!-- Start the caffe_ros node -->
    <node pkg="caffe_ros" type="caffe_ros_node" name="trails_dnn" output="screen" >
        <param name="camera_topic"  value="/zed2/zed_node/left/image_rect_color" />
        <param name="prototxt_path" value="$(arg prototxt_path)" />
        <param name="model_path"    value="$(arg model_path)" />
        <param name="input_layer"   value="$(arg input_layer)" />
        <param name="output_layer"  value="$(arg output_layer)" />
        <param name="data_type"     value="$(arg data_type)" />
    </node>

    <!-- Start the YOLO caffe_ros node--> 
    <node pkg="caffe_ros" type="caffe_ros_node" name="object_dnn" output="screen" >
        <param name="camera_topic"  value="/zed2/zed_node/left/image_rect_color" />
        <param name="prototxt_path" value="$(arg object_prototxt_path)" />
        <param name="model_path"    value="$(arg object_model_path)" />
        <param name="output_layer"  value="$(arg object_output_layer)" />
        <param name="inp_scale"     value="0.00390625" />
        <param name="inp_fmt"       value="RGB" />
        <param name="post_proc"     value="YOLO" />
        <param name="obj_det_threshold" value="$(arg obj_det_threshold)" />
        <param name="iou_threshold"     value="0.2" />
        <param name="data_type"     value="$(arg object_data_type)" />
        <param name="max_rate_hz"   value="$(arg object_rate_hz)" />
    </node>

    <!-- TESTING - MAVROS Launch -->
    <include file="$(find mavros)/launch/node.launch">
	<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
	<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

	<arg name="fcu_url" value="$(arg fcu_url)" />
	<arg name="gcs_url" value="$(arg gcs_url)" />
	<arg name="tgt_system" value="$(arg tgt_system)" />
	<arg name="tgt_component" value="$(arg tgt_component)" />
	<arg name="log_output" value="$(arg log_output)" />
	<arg name="fcu_protocol" value="$(arg fcu_protocol)" />
	<arg name="respawn_mavros" default="$(arg respawn_mavros)" />
    </include>
    
    <node pkg="redtail_debug" type="redtail_debug_node" name="redtail_debug" output="screen">
    </node>

    <node pkg="tf" type="static_transform_publisher" name="tf_publisher" args="0 0 0 3.14 0 0 /map $(arg frame_id) 100"/>
</launch>
